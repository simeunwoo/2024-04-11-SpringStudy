<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/security/oauth2 https://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.1.xsd">
	<context:component-scan base-package="com.sist.*"/>
	<!-- 접근 권한 설정 -->
	<!-- 페이지 별 접근 권한 -->
	<http auto-config="true" use-expressions="true">
		<csrf disabled="true"/><!-- 해킹 방지 : 사이트 위조 (파밍) -->
		<!--
			login.do
			hasRole('ROLE_ADMIN') : 한개만 적용
			permitAll : 모든 사람이 접근
			hasAnyRole('ROLE_ADMIN','ROLE_USER') : 여러개 적용 가능
		-->
		<intercept-url pattern="/member/**" access="permitAll"/>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/**" access="permitAll"/>
		<intercept-url pattern="/member/login.do" access="permitAll"/>
		<!--
			@GetMapping("member/login_ok.do")
			public String member_login_ok(String userId,String userPwd)
			{
			}
			===> id=username으로 인식
		-->
		<form-login login-page="/member/login.do"
			username-parameter="userId"
			password-parameter="userPwd"
			default-target-url="/main/main.do"
			always-use-default-target="false"
			authentication-failure-handler-ref="loginFailureHandler"
			authentication-success-handler-ref="loginSuccessHandler"
		/>
	</http>
	<!-- 로그인 처리 -->
	<!-- 데이터베이스 연결 -->
	<!-- security 5 : 반드시 비밀 번호 암호화를 해야 된다 -->
	<beans:bean
		id="bcryptEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"
	/>
</beans:beans>